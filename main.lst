   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	cmp_cmd_of_msg
  12               	cmp_cmd_of_msg:
  13               	.LFB8:
  14               		.file 1 "main.c"
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** #include <stdio.h>
   4:main.c        **** #include <stdlib.h>
   5:main.c        **** #include <string.h>
   6:main.c        **** #include <avr/interrupt.h>
   7:main.c        **** #include "uart/uart.h"
   8:main.c        **** #include "esp/esp.h"
   9:main.c        **** #include "commands.h"
  10:main.c        **** #include "ds1820/onewire.h"
  11:main.c        **** #include "ds1820/ds18x20.h"
  12:main.c        **** #include "main.h"
  13:main.c        **** #include "lcd/hd44780.h"
  14:main.c        **** 
  15:main.c        **** static uint8_t sensor_id[NUM_SENSORS][OW_ROMCODE_SIZE];
  16:main.c        **** static uint8_t nfound = 0;
  17:main.c        **** static int16_t temp[NUM_SENSORS];
  18:main.c        **** 
  19:main.c        **** static void update_temp(void) {
  20:main.c        **** 	uint8_t i;
  21:main.c        **** 
  22:main.c        **** 	if (!nfound) {
  23:main.c        **** 		uint8_t dnum = OW_SEARCH_FIRST;
  24:main.c        **** 
  25:main.c        **** 		ow_reset();
  26:main.c        **** 
  27:main.c        **** 		while (dnum != OW_LAST_DEVICE) {
  28:main.c        **** 			if (nfound) memcpy(sensor_id[nfound], sensor_id[nfound - 1], OW_ROMCODE_SIZE);
  29:main.c        **** 			dnum = ow_rom_search(dnum, sensor_id[nfound]);
  30:main.c        **** 			esp_debugf("Found: "IDSTR", dnum: %u", ID2STR(sensor_id[nfound]), dnum);
  31:main.c        **** 			nfound++;
  32:main.c        **** 		}
  33:main.c        **** 
  34:main.c        **** 		if (!nfound) {
  35:main.c        **** 			esp_debug("Error: No sensor founds!");
  36:main.c        **** 			return;
  37:main.c        **** 		}
  38:main.c        **** 
  39:main.c        **** 		esp_debugf("Found: %u", nfound);
  40:main.c        **** 
  41:main.c        **** 	}
  42:main.c        **** 
  43:main.c        **** 	for (i = 0; i < nfound; i++) {
  44:main.c        **** 		if (DS18X20_conversion_in_progress()) return;
  45:main.c        **** 		DS18X20_read_decicelsius(&sensor_id[i][0], &temp[i]);
  46:main.c        **** 	}
  47:main.c        **** 
  48:main.c        **** 	lcd_clrscr();
  49:main.c        **** 	lcd_putsf("t1:%d,%d t2:%d,%d", temp[0] / 10, temp[0] % 10, temp[1] / 10, temp[1] % 10);
  50:main.c        **** 	lcd_goto(0x40);
  51:main.c        **** 	lcd_putsf("t3:%d,%d", temp[2] / 10, temp[2] % 10);
  52:main.c        **** 
  53:main.c        **** 	esp_debugf("t1: %d, t2: %d, t3: %d", temp[0], temp[1], temp[2]);
  54:main.c        **** 
  55:main.c        **** 	DS18X20_start_meas( DS18X20_POWER_EXTERN, NULL);
  56:main.c        **** 
  57:main.c        **** }
  58:main.c        **** 
  59:main.c        **** /**
  60:main.c        ****  * '{<cmd>:<param>, <param>, ...}'
  61:main.c        ****  * '{<cmd>}'
  62:main.c        ****  */
  63:main.c        **** uint8_t cmp_cmd_of_msg(char *msg1, char *msg2) {
  15               		.loc 1 63 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  64:main.c        **** 	uint8_t i = 0;
  65:main.c        **** 
  66:main.c        **** 	while (*msg1 == '}' && *msg1 == ':' && *msg1 == *msg2) {
  67:main.c        **** 		i++;
  68:main.c        **** 		msg1++;
  69:main.c        **** 		msg2++;
  70:main.c        **** 	}
  71:main.c        **** 	return *msg1 == *msg2 ? 0 : i;
  72:main.c        **** }
  22               		.loc 1 72 0
  23 0000 80E0      		ldi r24,0
  24               	.LVL1:
  25 0002 0895      		ret
  26               		.cfi_endproc
  27               	.LFE8:
  29               		.section	.rodata.str1.1,"aMS",@progbits,1
  30               	.LC0:
  31 0000 4865 6C6C 		.string	"Hello world"
  31      6F20 776F 
  31      726C 6400 
  32               	.LC1:
  33 000c 466F 756E 		.string	"Found: %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x, dnum: %u"
  33      643A 2025 
  33      3032 783A 
  33      2530 3278 
  33      3A25 3032 
  34               	.LC2:
  35 0045 4572 726F 		.string	"Error: No sensor founds!"
  35      723A 204E 
  35      6F20 7365 
  35      6E73 6F72 
  35      2066 6F75 
  36               	.LC3:
  37 005e 466F 756E 		.string	"Found: %u"
  37      643A 2025 
  37      7500 
  38               	.LC4:
  39 0068 7431 3A25 		.string	"t1:%d,%d t2:%d,%d"
  39      642C 2564 
  39      2074 323A 
  39      2564 2C25 
  39      6400 
  40               	.LC5:
  41 007a 7433 3A25 		.string	"t3:%d,%d"
  41      642C 2564 
  41      00
  42               	.LC6:
  43 0083 7431 3A20 		.string	"t1: %d, t2: %d, t3: %d"
  43      2564 2C20 
  43      7432 3A20 
  43      2564 2C20 
  43      7433 3A20 
  44               	.LC7:
  45 009a 7B68 656C 		.string	"{hello-avr}"
  45      6C6F 2D61 
  45      7672 7D00 
  46               	.LC8:
  47 00a6 7B67 6574 		.string	"{get-sensor-id-avr}"
  47      2D73 656E 
  47      736F 722D 
  47      6964 2D61 
  47      7672 7D00 
  48               	.LC9:
  49 00ba 2530 3278 		.string	"%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x, %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x, %02x:%0
  49      3A25 3032 
  49      783A 2530 
  49      3278 3A25 
  49      3032 783A 
  50               	.LC10:
  51 0134 2530 3278 		.string	"%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x"
  51      3A25 3032 
  51      783A 2530 
  51      3278 3A25 
  51      3032 783A 
  52               	.LC11:
  53 015c 2569 00   		.string	"%i"
  54               	.LC12:
  55 015f 4572 723A 		.string	"Err: id not found"
  55      2069 6420 
  55      6E6F 7420 
  55      666F 756E 
  55      6400 
  56               		.section	.text.startup,"ax",@progbits
  57               	.global	main
  59               	main:
  60               	.LFB9:
  73:main.c        **** 
  74:main.c        **** int main(void) {
  61               		.loc 1 74 0
  62               		.cfi_startproc
  63 0000 CF93      		push r28
  64               	.LCFI0:
  65               		.cfi_def_cfa_offset 3
  66               		.cfi_offset 28, -2
  67 0002 DF93      		push r29
  68               	.LCFI1:
  69               		.cfi_def_cfa_offset 4
  70               		.cfi_offset 29, -3
  71 0004 CDB7      		in r28,__SP_L__
  72 0006 DEB7      		in r29,__SP_H__
  73               	.LCFI2:
  74               		.cfi_def_cfa_register 28
  75 0008 CE57      		subi r28,126
  76 000a D109      		sbc r29,__zero_reg__
  77               	.LCFI3:
  78               		.cfi_def_cfa_offset 130
  79 000c 0FB6      		in __tmp_reg__,__SREG__
  80 000e F894      		cli
  81 0010 DEBF      		out __SP_H__,r29
  82 0012 0FBE      		out __SREG__,__tmp_reg__
  83 0014 CDBF      		out __SP_L__,r28
  84               	/* prologue: function */
  85               	/* frame size = 126 */
  86               	/* stack size = 128 */
  87               	.L__stack_usage = 128
  75:main.c        **** 
  76:main.c        **** 	init_uart();			// init uart
  88               		.loc 1 76 0
  89 0016 00D0      		rcall init_uart
  90               	.LVL2:
  77:main.c        **** 
  78:main.c        **** 	lcd_init();
  91               		.loc 1 78 0
  92 0018 00D0      		rcall lcd_init
  93               	.LVL3:
  79:main.c        **** 	lcd_clrscr();
  94               		.loc 1 79 0
  95 001a 00D0      		rcall lcd_clrscr
  96               	.LVL4:
  80:main.c        **** 
  81:main.c        **** 	sei();
  97               		.loc 1 81 0
  98               	/* #APP */
  99               	 ;  81 "main.c" 1
 100 001c 7894      		sei
 101               	 ;  0 "" 2
  82:main.c        **** 	send("Hello world");
 102               		.loc 1 82 0
 103               	/* #NOAPP */
 104 001e 80E0      		ldi r24,lo8(.LC0)
 105 0020 90E0      		ldi r25,hi8(.LC0)
 106 0022 00D0      		rcall send
 107               	.LVL5:
  83:main.c        **** 
  84:main.c        **** 	DDRB |= 1 << 0;
 108               		.loc 1 84 0
 109 0024 209A      		sbi 0x4,0
 110               	.LBB11:
 111               	.LBB12:
  49:main.c        **** 	lcd_putsf("t1:%d,%d t2:%d,%d", temp[0] / 10, temp[0] % 10, temp[1] / 10, temp[1] % 10);
 112               		.loc 1 49 0
 113 0026 0AE0      		ldi r16,lo8(10)
 114 0028 10E0      		ldi r17,0
 115 002a 40E0      		ldi r20,lo8(.LC4)
 116 002c 442E      		mov r4,r20
 117 002e 40E0      		ldi r20,hi8(.LC4)
 118 0030 542E      		mov r5,r20
  51:main.c        **** 	lcd_putsf("t3:%d,%d", temp[2] / 10, temp[2] % 10);
 119               		.loc 1 51 0
 120 0032 50E0      		ldi r21,lo8(.LC5)
 121 0034 652E      		mov r6,r21
 122 0036 50E0      		ldi r21,hi8(.LC5)
 123 0038 752E      		mov r7,r21
 124               	.LBB13:
  30:main.c        **** 			esp_debugf("Found: "IDSTR", dnum: %u", ID2STR(sensor_id[nfound]), dnum);
 125               		.loc 1 30 0
 126 003a 60E0      		ldi r22,lo8(.LC1)
 127 003c C62E      		mov r12,r22
 128 003e 60E0      		ldi r22,hi8(.LC1)
 129 0040 D62E      		mov r13,r22
 130               	.LBE13:
 131               	.LBE12:
 132               	.LBE11:
 133               	.LBB18:
 134               	.LBB19:
  85:main.c        **** 	while (1) {
  86:main.c        **** 		PORTB ^= 1 << 0;
  87:main.c        **** 
  88:main.c        **** 		update_temp();
  89:main.c        **** 
  90:main.c        **** 		if (esp_isMsgToExe()) {
  91:main.c        **** 			char msg_buffer[ESP_RECEIVE_BUFFER_SIZE + 1];
  92:main.c        **** 			esp_getMsg_done(msg_buffer);
  93:main.c        **** 
  94:main.c        **** 			if (strcmp(msg_buffer, CMD_HELLO_AVR) == 0) {
  95:main.c        **** 
  96:main.c        **** 				send(RESPONSE_HELLO_AVR);
  97:main.c        **** 
  98:main.c        **** 			} else if (strcmp(msg_buffer, CMD_GET_SENSORS_ID) == 0) {
  99:main.c        **** 
 100:main.c        **** 				esp_sendf(IDSTR", "IDSTR", "IDSTR, ID2STR(sensor_id[0]), ID2STR(sensor_id[1]), ID2STR(sensor_id
 101:main.c        **** 
 102:main.c        **** 			} else if (cmp_cmd_of_msg(msg_buffer, CMD_GET_TEMP) == 0) {
 103:main.c        **** 				/* 23 = strlen(28:ff:da:60:62:14:03:e4) */
 104:main.c        **** 
 105:main.c        **** 				char b[IDSTR_LEN + 1];
 106:main.c        **** 				uint8_t i = 0;
 107:main.c        **** 				uint8_t j = 0;
 108:main.c        **** 				uint8_t k = 0;
 109:main.c        **** 
 110:main.c        **** 				for (i = 0; i < nfound && k != IDSTR_LEN; i++) {
 111:main.c        **** 
 112:main.c        **** 					sprintf(b, IDSTR, ID2STR(sensor_id[i]));
 135               		.loc 1 112 0
 136 0042 7E01      		movw r14,r28
 137 0044 26E6      		ldi r18,102
 138 0046 E20E      		add r14,r18
 139 0048 F11C      		adc r15,__zero_reg__
 140               	.L26:
 141               	.LBE19:
 142               	.LBE18:
  86:main.c        **** 		PORTB ^= 1 << 0;
 143               		.loc 1 86 0
 144 004a 2224      		clr r2
 145 004c 2394      		inc r2
 146               	.LBB22:
 147               	.LBB16:
  53:main.c        **** 	esp_debugf("t1: %d, t2: %d, t3: %d", temp[0], temp[1], temp[2]);
 148               		.loc 1 53 0
 149 004e 20E0      		ldi r18,lo8(.LC6)
 150 0050 A22E      		mov r10,r18
 151 0052 20E0      		ldi r18,hi8(.LC6)
 152 0054 B22E      		mov r11,r18
 153               	.LBB14:
  39:main.c        **** 		esp_debugf("Found: %u", nfound);
 154               		.loc 1 39 0
 155 0056 30E0      		ldi r19,lo8(.LC3)
 156 0058 832E      		mov r8,r19
 157 005a 30E0      		ldi r19,hi8(.LC3)
 158 005c 932E      		mov r9,r19
 159               	.L12:
 160               	.LBE14:
 161               	.LBE16:
 162               	.LBE22:
  86:main.c        **** 		PORTB ^= 1 << 0;
 163               		.loc 1 86 0
 164 005e 85B1      		in r24,0x5
 165 0060 8225      		eor r24,r2
 166 0062 85B9      		out 0x5,r24
 167               	.LBB23:
 168               	.LBB17:
  22:main.c        **** 	if (!nfound) {
 169               		.loc 1 22 0
 170 0064 8091 0000 		lds r24,nfound
 171 0068 8111      		cpse r24,__zero_reg__
 172 006a 00C0      		rjmp .L3
 173               	.LVL6:
 174               	.LBB15:
  25:main.c        **** 		ow_reset();
 175               		.loc 1 25 0
 176 006c 00D0      		rcall ow_reset
 177               	.LVL7:
  23:main.c        **** 		uint8_t dnum = OW_SEARCH_FIRST;
 178               		.loc 1 23 0
 179 006e 8FEF      		ldi r24,lo8(-1)
 180               	.LVL8:
 181               	.L6:
  28:main.c        **** 			if (nfound) memcpy(sensor_id[nfound], sensor_id[nfound - 1], OW_ROMCODE_SIZE);
 182               		.loc 1 28 0
 183 0070 9091 0000 		lds r25,nfound
 184 0074 692F      		mov r22,r25
 185 0076 70E0      		ldi r23,0
 186 0078 9923      		tst r25
 187 007a 01F0      		breq .L4
 188 007c DB01      		movw r26,r22
 189 007e 53E0      		ldi r21,3
 190               		1:
 191 0080 AA0F      		lsl r26
 192 0082 BB1F      		rol r27
 193 0084 5A95      		dec r21
 194 0086 01F4      		brne 1b
 195 0088 A050      		subi r26,lo8(-(sensor_id))
 196 008a B040      		sbci r27,hi8(-(sensor_id))
 197 008c FB01      		movw r30,r22
 198 008e 93E0      		ldi r25,3
 199               		1:
 200 0090 EE0F      		lsl r30
 201 0092 FF1F      		rol r31
 202 0094 9A95      		dec r25
 203 0096 01F4      		brne 1b
 204 0098 E050      		subi r30,lo8(-(sensor_id-8))
 205 009a F040      		sbci r31,hi8(-(sensor_id-8))
 206 009c 98E0      		ldi r25,lo8(8)
 207               		0:
 208 009e 0190      		ld r0,Z+
 209 00a0 0D92      		st X+,r0
 210 00a2 9A95      		dec r25
 211 00a4 01F4      		brne 0b
 212               	.L4:
  29:main.c        **** 			dnum = ow_rom_search(dnum, sensor_id[nfound]);
 213               		.loc 1 29 0
 214 00a6 43E0      		ldi r20,3
 215               		1:
 216 00a8 660F      		lsl r22
 217 00aa 771F      		rol r23
 218 00ac 4A95      		dec r20
 219 00ae 01F4      		brne 1b
 220 00b0 6050      		subi r22,lo8(-(sensor_id))
 221 00b2 7040      		sbci r23,hi8(-(sensor_id))
 222 00b4 00D0      		rcall ow_rom_search
 223               	.LVL9:
  30:main.c        **** 			esp_debugf("Found: "IDSTR", dnum: %u", ID2STR(sensor_id[nfound]), dnum);
 224               		.loc 1 30 0
 225 00b6 E091 0000 		lds r30,nfound
 226 00ba 1F92      		push __zero_reg__
 227 00bc 8F93      		push r24
 228 00be 38E0      		ldi r19,lo8(8)
 229 00c0 E39F      		mul r30,r19
 230 00c2 F001      		movw r30,r0
 231 00c4 1124      		clr __zero_reg__
 232 00c6 E050      		subi r30,lo8(-(sensor_id))
 233 00c8 F040      		sbci r31,hi8(-(sensor_id))
 234 00ca 9781      		ldd r25,Z+7
 235 00cc 1F92      		push __zero_reg__
 236 00ce 9F93      		push r25
 237 00d0 9681      		ldd r25,Z+6
 238 00d2 1F92      		push __zero_reg__
 239 00d4 9F93      		push r25
 240 00d6 9581      		ldd r25,Z+5
 241 00d8 1F92      		push __zero_reg__
 242 00da 9F93      		push r25
 243 00dc 9481      		ldd r25,Z+4
 244 00de 1F92      		push __zero_reg__
 245 00e0 9F93      		push r25
 246 00e2 9381      		ldd r25,Z+3
 247 00e4 1F92      		push __zero_reg__
 248 00e6 9F93      		push r25
 249 00e8 9281      		ldd r25,Z+2
 250 00ea 1F92      		push __zero_reg__
 251 00ec 9F93      		push r25
 252 00ee 9181      		ldd r25,Z+1
 253 00f0 1F92      		push __zero_reg__
 254 00f2 9F93      		push r25
 255 00f4 9081      		ld r25,Z
 256 00f6 1F92      		push __zero_reg__
 257 00f8 9F93      		push r25
 258 00fa DF92      		push r13
 259 00fc CF92      		push r12
 260 00fe EF96      		adiw r28,126-63
 261 0100 8FAF      		std Y+63,r24
 262 0102 EF97      		sbiw r28,126-63
 263 0104 00D0      		rcall esp_debugf
 264               	.LVL10:
  31:main.c        **** 			nfound++;
 265               		.loc 1 31 0
 266 0106 9091 0000 		lds r25,nfound
 267 010a 9F5F      		subi r25,lo8(-(1))
 268 010c 9093 0000 		sts nfound,r25
 269               	.LVL11:
  27:main.c        **** 		while (dnum != OW_LAST_DEVICE) {
 270               		.loc 1 27 0
 271 0110 0FB6      		in __tmp_reg__,__SREG__
 272 0112 F894      		cli
 273 0114 DEBF      		out __SP_H__,r29
 274 0116 0FBE      		out __SREG__,__tmp_reg__
 275 0118 CDBF      		out __SP_L__,r28
 276 011a EF96      		adiw r28,126-63
 277 011c 8FAD      		ldd r24,Y+63
 278 011e EF97      		sbiw r28,126-63
 279 0120 8111      		cpse r24,__zero_reg__
 280 0122 00C0      		rjmp .L6
  34:main.c        **** 		if (!nfound) {
 281               		.loc 1 34 0
 282 0124 9111      		cpse r25,__zero_reg__
 283 0126 00C0      		rjmp .L7
  35:main.c        **** 			esp_debug("Error: No sensor founds!");
 284               		.loc 1 35 0
 285 0128 80E0      		ldi r24,lo8(.LC2)
 286 012a 90E0      		ldi r25,hi8(.LC2)
 287 012c 00D0      		rcall esp_debug
 288               	.LVL12:
 289 012e 00C0      		rjmp .L8
 290               	.LVL13:
 291               	.L7:
  39:main.c        **** 		esp_debugf("Found: %u", nfound);
 292               		.loc 1 39 0
 293 0130 1F92      		push __zero_reg__
 294 0132 9F93      		push r25
 295 0134 9F92      		push r9
 296 0136 8F92      		push r8
 297 0138 00D0      		rcall esp_debugf
 298               	.LVL14:
 299 013a 0F90      		pop __tmp_reg__
 300 013c 0F90      		pop __tmp_reg__
 301 013e 0F90      		pop __tmp_reg__
 302 0140 0F90      		pop __tmp_reg__
 303               	.L3:
  23:main.c        **** 		uint8_t dnum = OW_SEARCH_FIRST;
 304               		.loc 1 23 0
 305 0142 312C      		mov r3,__zero_reg__
 306               	.L9:
 307               	.LVL15:
 308               	.LBE15:
  43:main.c        **** 	for (i = 0; i < nfound; i++) {
 309               		.loc 1 43 0
 310 0144 8091 0000 		lds r24,nfound
 311 0148 3816      		cp r3,r24
 312 014a 00F4      		brsh .L35
  44:main.c        **** 		if (DS18X20_conversion_in_progress()) return;
 313               		.loc 1 44 0
 314 014c 00D0      		rcall DS18X20_conversion_in_progress
 315               	.LVL16:
 316 014e 8111      		cpse r24,__zero_reg__
 317 0150 00C0      		rjmp .L8
  45:main.c        **** 		DS18X20_read_decicelsius(&sensor_id[i][0], &temp[i]);
 318               		.loc 1 45 0
 319 0152 832D      		mov r24,r3
 320 0154 90E0      		ldi r25,0
 321 0156 BC01      		movw r22,r24
 322 0158 660F      		lsl r22
 323 015a 771F      		rol r23
 324 015c 6050      		subi r22,lo8(-(temp))
 325 015e 7040      		sbci r23,hi8(-(temp))
 326 0160 33E0      		ldi r19,3
 327               		1:
 328 0162 880F      		lsl r24
 329 0164 991F      		rol r25
 330 0166 3A95      		dec r19
 331 0168 01F4      		brne 1b
 332 016a 8050      		subi r24,lo8(-(sensor_id))
 333 016c 9040      		sbci r25,hi8(-(sensor_id))
 334 016e 00D0      		rcall DS18X20_read_decicelsius
 335               	.LVL17:
  43:main.c        **** 	for (i = 0; i < nfound; i++) {
 336               		.loc 1 43 0
 337 0170 3394      		inc r3
 338               	.LVL18:
 339 0172 00C0      		rjmp .L9
 340               	.L35:
  48:main.c        **** 	lcd_clrscr();
 341               		.loc 1 48 0
 342 0174 00D0      		rcall lcd_clrscr
 343               	.LVL19:
  49:main.c        **** 	lcd_putsf("t1:%d,%d t2:%d,%d", temp[0] / 10, temp[0] % 10, temp[1] / 10, temp[1] % 10);
 344               		.loc 1 49 0
 345 0176 8091 0000 		lds r24,temp+2
 346 017a 9091 0000 		lds r25,temp+2+1
 347 017e 2091 0000 		lds r18,temp
 348 0182 3091 0000 		lds r19,temp+1
 349 0186 B801      		movw r22,r16
 350 0188 00D0      		rcall __divmodhi4
 351 018a 9F93      		push r25
 352 018c 8F93      		push r24
 353 018e 7F93      		push r23
 354 0190 6F93      		push r22
 355 0192 C901      		movw r24,r18
 356 0194 B801      		movw r22,r16
 357 0196 00D0      		rcall __divmodhi4
 358 0198 9F93      		push r25
 359 019a 8F93      		push r24
 360 019c 7F93      		push r23
 361 019e 6F93      		push r22
 362 01a0 5F92      		push r5
 363 01a2 4F92      		push r4
 364 01a4 00D0      		rcall lcd_putsf
 365               	.LVL20:
  50:main.c        **** 	lcd_goto(0x40);
 366               		.loc 1 50 0
 367 01a6 80E4      		ldi r24,lo8(64)
 368 01a8 00D0      		rcall lcd_goto
 369               	.LVL21:
  51:main.c        **** 	lcd_putsf("t3:%d,%d", temp[2] / 10, temp[2] % 10);
 370               		.loc 1 51 0
 371 01aa 8091 0000 		lds r24,temp+4
 372 01ae 9091 0000 		lds r25,temp+4+1
 373 01b2 B801      		movw r22,r16
 374 01b4 00D0      		rcall __divmodhi4
 375 01b6 9F93      		push r25
 376 01b8 8F93      		push r24
 377 01ba 7F93      		push r23
 378 01bc 6F93      		push r22
 379 01be 7F92      		push r7
 380 01c0 6F92      		push r6
 381 01c2 00D0      		rcall lcd_putsf
 382               	.LVL22:
  53:main.c        **** 	esp_debugf("t1: %d, t2: %d, t3: %d", temp[0], temp[1], temp[2]);
 383               		.loc 1 53 0
 384 01c4 8091 0000 		lds r24,temp+5
 385 01c8 8F93      		push r24
 386 01ca 8091 0000 		lds r24,temp+4
 387 01ce 8F93      		push r24
 388 01d0 8091 0000 		lds r24,temp+3
 389 01d4 8F93      		push r24
 390 01d6 8091 0000 		lds r24,temp+2
 391 01da 8F93      		push r24
 392 01dc 8091 0000 		lds r24,temp+1
 393 01e0 8F93      		push r24
 394 01e2 8091 0000 		lds r24,temp
 395 01e6 8F93      		push r24
 396 01e8 BF92      		push r11
 397 01ea AF92      		push r10
 398 01ec 00D0      		rcall esp_debugf
 399               	.LVL23:
  55:main.c        **** 	DS18X20_start_meas( DS18X20_POWER_EXTERN, NULL);
 400               		.loc 1 55 0
 401 01ee 60E0      		ldi r22,0
 402 01f0 70E0      		ldi r23,0
 403 01f2 81E0      		ldi r24,lo8(1)
 404 01f4 00D0      		rcall DS18X20_start_meas
 405               	.LVL24:
 406 01f6 0FB6      		in __tmp_reg__,__SREG__
 407 01f8 F894      		cli
 408 01fa DEBF      		out __SP_H__,r29
 409 01fc 0FBE      		out __SREG__,__tmp_reg__
 410 01fe CDBF      		out __SP_L__,r28
 411               	.LVL25:
 412               	.L8:
 413               	.LBE17:
 414               	.LBE23:
  90:main.c        **** 		if (esp_isMsgToExe()) {
 415               		.loc 1 90 0
 416 0200 00D0      		rcall esp_isMsgToExe
 417               	.LVL26:
 418 0202 8823      		tst r24
 419 0204 01F4      		brne .+2
 420 0206 00C0      		rjmp .L12
 421               	.LBB24:
  92:main.c        **** 			esp_getMsg_done(msg_buffer);
 422               		.loc 1 92 0
 423 0208 CE01      		movw r24,r28
 424 020a 0196      		adiw r24,1
 425 020c 00D0      		rcall esp_getMsg_done
 426               	.LVL27:
  94:main.c        **** 			if (strcmp(msg_buffer, CMD_HELLO_AVR) == 0) {
 427               		.loc 1 94 0
 428 020e 60E0      		ldi r22,lo8(.LC7)
 429 0210 70E0      		ldi r23,hi8(.LC7)
 430 0212 CE01      		movw r24,r28
 431 0214 0196      		adiw r24,1
 432 0216 00D0      		rcall strcmp
 433               	.LVL28:
 434 0218 892B      		or r24,r25
 435 021a 01F4      		brne .L13
  96:main.c        **** 				send(RESPONSE_HELLO_AVR);
 436               		.loc 1 96 0
 437 021c 80E0      		ldi r24,lo8(.LC7)
 438 021e 90E0      		ldi r25,hi8(.LC7)
 439 0220 00D0      		rcall send
 440               	.LVL29:
 441 0222 00C0      		rjmp .L26
 442               	.L13:
  98:main.c        **** 			} else if (strcmp(msg_buffer, CMD_GET_SENSORS_ID) == 0) {
 443               		.loc 1 98 0
 444 0224 60E0      		ldi r22,lo8(.LC8)
 445 0226 70E0      		ldi r23,hi8(.LC8)
 446 0228 CE01      		movw r24,r28
 447 022a 0196      		adiw r24,1
 448 022c 00D0      		rcall strcmp
 449               	.LVL30:
 450 022e 892B      		or r24,r25
 451 0230 01F0      		breq .L15
 452 0232 40E0      		ldi r20,0
 453 0234 912C      		mov r9,__zero_reg__
 454               	.LBB20:
 455               		.loc 1 112 0
 456 0236 90E0      		ldi r25,lo8(.LC10)
 457 0238 A92E      		mov r10,r25
 458 023a 90E0      		ldi r25,hi8(.LC10)
 459 023c B92E      		mov r11,r25
 460 023e 00C0      		rjmp .L16
 461               	.L15:
 462               	.LBE20:
 100:main.c        **** 				esp_sendf(IDSTR", "IDSTR", "IDSTR, ID2STR(sensor_id[0]), ID2STR(sensor_id[1]), ID2STR(sensor_id
 463               		.loc 1 100 0
 464 0240 8091 0000 		lds r24,sensor_id+23
 465 0244 1F92      		push __zero_reg__
 466 0246 8F93      		push r24
 467 0248 8091 0000 		lds r24,sensor_id+22
 468 024c 1F92      		push __zero_reg__
 469 024e 8F93      		push r24
 470 0250 8091 0000 		lds r24,sensor_id+21
 471 0254 1F92      		push __zero_reg__
 472 0256 8F93      		push r24
 473 0258 8091 0000 		lds r24,sensor_id+20
 474 025c 1F92      		push __zero_reg__
 475 025e 8F93      		push r24
 476 0260 8091 0000 		lds r24,sensor_id+19
 477 0264 1F92      		push __zero_reg__
 478 0266 8F93      		push r24
 479 0268 8091 0000 		lds r24,sensor_id+18
 480 026c 1F92      		push __zero_reg__
 481 026e 8F93      		push r24
 482 0270 8091 0000 		lds r24,sensor_id+17
 483 0274 1F92      		push __zero_reg__
 484 0276 8F93      		push r24
 485 0278 8091 0000 		lds r24,sensor_id+16
 486 027c 1F92      		push __zero_reg__
 487 027e 8F93      		push r24
 488 0280 8091 0000 		lds r24,sensor_id+15
 489 0284 1F92      		push __zero_reg__
 490 0286 8F93      		push r24
 491 0288 8091 0000 		lds r24,sensor_id+14
 492 028c 1F92      		push __zero_reg__
 493 028e 8F93      		push r24
 494 0290 8091 0000 		lds r24,sensor_id+13
 495 0294 1F92      		push __zero_reg__
 496 0296 8F93      		push r24
 497 0298 8091 0000 		lds r24,sensor_id+12
 498 029c 1F92      		push __zero_reg__
 499 029e 8F93      		push r24
 500 02a0 8091 0000 		lds r24,sensor_id+11
 501 02a4 1F92      		push __zero_reg__
 502 02a6 8F93      		push r24
 503 02a8 8091 0000 		lds r24,sensor_id+10
 504 02ac 1F92      		push __zero_reg__
 505 02ae 8F93      		push r24
 506 02b0 8091 0000 		lds r24,sensor_id+9
 507 02b4 1F92      		push __zero_reg__
 508 02b6 8F93      		push r24
 509 02b8 8091 0000 		lds r24,sensor_id+8
 510 02bc 1F92      		push __zero_reg__
 511 02be 8F93      		push r24
 512 02c0 8091 0000 		lds r24,sensor_id+7
 513 02c4 1F92      		push __zero_reg__
 514 02c6 8F93      		push r24
 515 02c8 8091 0000 		lds r24,sensor_id+6
 516 02cc 1F92      		push __zero_reg__
 517 02ce 8F93      		push r24
 518 02d0 8091 0000 		lds r24,sensor_id+5
 519 02d4 1F92      		push __zero_reg__
 520 02d6 8F93      		push r24
 521 02d8 8091 0000 		lds r24,sensor_id+4
 522 02dc 1F92      		push __zero_reg__
 523 02de 8F93      		push r24
 524 02e0 8091 0000 		lds r24,sensor_id+3
 525 02e4 1F92      		push __zero_reg__
 526 02e6 8F93      		push r24
 527 02e8 8091 0000 		lds r24,sensor_id+2
 528 02ec 1F92      		push __zero_reg__
 529 02ee 8F93      		push r24
 530 02f0 8091 0000 		lds r24,sensor_id+1
 531 02f4 1F92      		push __zero_reg__
 532 02f6 8F93      		push r24
 533 02f8 8091 0000 		lds r24,sensor_id
 534 02fc 1F92      		push __zero_reg__
 535 02fe 8F93      		push r24
 536 0300 80E0      		ldi r24,lo8(.LC9)
 537 0302 90E0      		ldi r25,hi8(.LC9)
 538 0304 9F93      		push r25
 539 0306 8F93      		push r24
 540 0308 00D0      		rcall esp_sendf
 541               	.LVL31:
 542 030a 0FB6      		in __tmp_reg__,__SREG__
 543 030c F894      		cli
 544 030e DEBF      		out __SP_H__,r29
 545 0310 0FBE      		out __SREG__,__tmp_reg__
 546 0312 CDBF      		out __SP_L__,r28
 547 0314 00C0      		rjmp .L26
 548               	.LVL32:
 549               	.L36:
 550 0316 F701      		movw r30,r14
 551               	.LBB21:
 113:main.c        **** 
 114:main.c        **** 					for (j = 0; msg_buffer[j] != ':'; j++)
 115:main.c        **** 						;
 116:main.c        **** 					j += 1;
 552               		.loc 1 116 0
 553 0318 80E0      		ldi r24,0
 554 031a 90E0      		ldi r25,0
 555 031c 41E0      		ldi r20,lo8(1)
 556 031e 50E0      		ldi r21,0
 557 0320 4C0F      		add r20,r28
 558 0322 5D1F      		adc r21,r29
 559 0324 420F      		add r20,r18
 560 0326 511D      		adc r21,__zero_reg__
 561 0328 9A01      		movw r18,r20
 562               	.LVL33:
 563               	.L19:
 564 032a 482F      		mov r20,r24
 565               	.LVL34:
 117:main.c        **** 
 118:main.c        **** 					for (k = 0; k < IDSTR_LEN && msg_buffer[j + k] == b[k]; k++)
 566               		.loc 1 118 0 discriminator 2
 567 032c 5191      		ld r21,Z+
 568 032e D901      		movw r26,r18
 569 0330 A80F      		add r26,r24
 570 0332 B91F      		adc r27,r25
 571 0334 6C91      		ld r22,X
 572 0336 6517      		cp r22,r21
 573 0338 01F4      		brne .+2
 574 033a 00C0      		rjmp .L21
 575               	.LVL35:
 576               	.L20:
 110:main.c        **** 				for (i = 0; i < nfound && k != IDSTR_LEN; i++) {
 577               		.loc 1 110 0
 578 033c 9394      		inc r9
 579               	.LVL36:
 580               	.L16:
 110:main.c        **** 				for (i = 0; i < nfound && k != IDSTR_LEN; i++) {
 581               		.loc 1 110 0 is_stmt 0 discriminator 1
 582 033e 8091 0000 		lds r24,nfound
 583 0342 9816      		cp r9,r24
 584 0344 00F0      		brlo .+2
 585 0346 00C0      		rjmp .L22
 110:main.c        **** 				for (i = 0; i < nfound && k != IDSTR_LEN; i++) {
 586               		.loc 1 110 0 discriminator 2
 587 0348 4731      		cpi r20,lo8(23)
 588 034a 01F0      		breq .L25
 112:main.c        **** 					sprintf(b, IDSTR, ID2STR(sensor_id[i]));
 589               		.loc 1 112 0 is_stmt 1
 590 034c 38E0      		ldi r19,lo8(8)
 591 034e 939E      		mul r9,r19
 592 0350 F001      		movw r30,r0
 593 0352 1124      		clr __zero_reg__
 594 0354 E050      		subi r30,lo8(-(sensor_id))
 595 0356 F040      		sbci r31,hi8(-(sensor_id))
 596 0358 8781      		ldd r24,Z+7
 597 035a 1F92      		push __zero_reg__
 598 035c 8F93      		push r24
 599 035e 8681      		ldd r24,Z+6
 600 0360 1F92      		push __zero_reg__
 601 0362 8F93      		push r24
 602 0364 8581      		ldd r24,Z+5
 603 0366 1F92      		push __zero_reg__
 604 0368 8F93      		push r24
 605 036a 8481      		ldd r24,Z+4
 606 036c 1F92      		push __zero_reg__
 607 036e 8F93      		push r24
 608 0370 8381      		ldd r24,Z+3
 609 0372 1F92      		push __zero_reg__
 610 0374 8F93      		push r24
 611 0376 8281      		ldd r24,Z+2
 612 0378 1F92      		push __zero_reg__
 613 037a 8F93      		push r24
 614 037c 8181      		ldd r24,Z+1
 615 037e 1F92      		push __zero_reg__
 616 0380 8F93      		push r24
 617 0382 8081      		ld r24,Z
 618 0384 1F92      		push __zero_reg__
 619 0386 8F93      		push r24
 620 0388 BF92      		push r11
 621 038a AF92      		push r10
 622 038c FF92      		push r15
 623 038e EF92      		push r14
 624 0390 00D0      		rcall sprintf
 625               	.LVL37:
 114:main.c        **** 					for (j = 0; msg_buffer[j] != ':'; j++)
 626               		.loc 1 114 0
 627 0392 0FB6      		in __tmp_reg__,__SREG__
 628 0394 F894      		cli
 629 0396 DEBF      		out __SP_H__,r29
 630 0398 0FBE      		out __SREG__,__tmp_reg__
 631 039a CDBF      		out __SP_L__,r28
 632 039c 80E0      		ldi r24,0
 633               	.LVL38:
 634               	.L17:
 114:main.c        **** 					for (j = 0; msg_buffer[j] != ':'; j++)
 635               		.loc 1 114 0 is_stmt 0 discriminator 1
 636 039e E1E0      		ldi r30,lo8(1)
 637 03a0 F0E0      		ldi r31,0
 638 03a2 EC0F      		add r30,r28
 639 03a4 FD1F      		adc r31,r29
 640 03a6 E80F      		add r30,r24
 641 03a8 F11D      		adc r31,__zero_reg__
 642 03aa 9081      		ld r25,Z
 643 03ac 21E0      		ldi r18,lo8(1)
 644 03ae 280F      		add r18,r24
 645 03b0 9A33      		cpi r25,lo8(58)
 646 03b2 01F4      		brne .+2
 647 03b4 00C0      		rjmp .L36
 114:main.c        **** 					for (j = 0; msg_buffer[j] != ':'; j++)
 648               		.loc 1 114 0 discriminator 2
 649 03b6 822F      		mov r24,r18
 650               	.LVL39:
 651 03b8 00C0      		rjmp .L17
 652               	.LVL40:
 653               	.L21:
 654 03ba 0196      		adiw r24,1
 655               	.LVL41:
 656               		.loc 1 118 0 is_stmt 1 discriminator 1
 657 03bc 8731      		cpi r24,23
 658 03be 9105      		cpc r25,__zero_reg__
 659 03c0 01F0      		breq .+2
 660 03c2 00C0      		rjmp .L19
 661 03c4 47E1      		ldi r20,lo8(23)
 662 03c6 00C0      		rjmp .L20
 663               	.LVL42:
 664               	.L25:
 119:main.c        **** 						;
 120:main.c        **** 
 121:main.c        **** 				}
 122:main.c        **** 
 123:main.c        **** 				if (k == IDSTR_LEN) esp_sendf("%i", temp[i - 1]);
 665               		.loc 1 123 0
 666 03c8 E92D      		mov r30,r9
 667 03ca F0E0      		ldi r31,0
 668 03cc EE0F      		lsl r30
 669 03ce FF1F      		rol r31
 670 03d0 E050      		subi r30,lo8(-(temp-2))
 671 03d2 F040      		sbci r31,hi8(-(temp-2))
 672 03d4 8181      		ldd r24,Z+1
 673 03d6 8F93      		push r24
 674 03d8 8081      		ld r24,Z
 675 03da 8F93      		push r24
 676 03dc 80E0      		ldi r24,lo8(.LC11)
 677 03de 90E0      		ldi r25,hi8(.LC11)
 678 03e0 9F93      		push r25
 679 03e2 8F93      		push r24
 680 03e4 00D0      		rcall esp_sendf
 681               	.LVL43:
 682 03e6 0F90      		pop __tmp_reg__
 683 03e8 0F90      		pop __tmp_reg__
 684 03ea 0F90      		pop __tmp_reg__
 685 03ec 0F90      		pop __tmp_reg__
 686 03ee 00C0      		rjmp .L26
 687               	.LVL44:
 688               	.L22:
 689 03f0 4731      		cpi r20,lo8(23)
 690 03f2 01F0      		breq .L25
 124:main.c        **** 				else esp_sendf("Err: id not found");
 691               		.loc 1 124 0
 692 03f4 80E0      		ldi r24,lo8(.LC12)
 693 03f6 90E0      		ldi r25,hi8(.LC12)
 694 03f8 9F93      		push r25
 695 03fa 8F93      		push r24
 696 03fc 00D0      		rcall esp_sendf
 697               	.LVL45:
 698 03fe 0F90      		pop __tmp_reg__
 699 0400 0F90      		pop __tmp_reg__
 700 0402 00C0      		rjmp .L26
 701               	.LBE21:
 702               	.LBE24:
 703               		.cfi_endproc
 704               	.LFE9:
 706               		.local	temp
 707               		.comm	temp,6,1
 708               		.local	nfound
 709               		.comm	nfound,1,1
 710               		.local	sensor_id
 711               		.comm	sensor_id,24,1
 712               		.text
 713               	.Letext0:
 714               		.file 2 "/usr/lib/avr/include/stdint.h"
 715               		.file 3 "ds1820/onewire.h"
 716               		.file 4 "esp/esp.h"
 717               		.file 5 "ds1820/ds18x20.h"
 718               		.file 6 "lcd/hd44780.h"
 719               		.file 7 "/usr/lib/avr/include/stdio.h"
 720               		.file 8 "/usr/lib/avr/include/string.h"
 721               		.file 9 "uart/uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccYQg8Po.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccYQg8Po.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccYQg8Po.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccYQg8Po.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccYQg8Po.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccYQg8Po.s:12     .text:0000000000000000 cmp_cmd_of_msg
     /tmp/ccYQg8Po.s:59     .text.startup:0000000000000000 main
     /tmp/ccYQg8Po.s:707    .bss:0000000000000006 nfound
     /tmp/ccYQg8Po.s:709    .bss:0000000000000007 sensor_id
                             .bss:0000000000000000 temp

UNDEFINED SYMBOLS
init_uart
lcd_init
lcd_clrscr
send
ow_reset
ow_rom_search
esp_debugf
esp_debug
DS18X20_conversion_in_progress
DS18X20_read_decicelsius
__divmodhi4
lcd_putsf
lcd_goto
DS18X20_start_meas
esp_isMsgToExe
esp_getMsg_done
strcmp
esp_sendf
sprintf
__do_copy_data
__do_clear_bss
